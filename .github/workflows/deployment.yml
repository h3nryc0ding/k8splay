name: Fullstack CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}-deployment

jobs:
  CreateVersion:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create version tag
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DRY_RUN: true
  Dockerize:
    strategy:
      matrix:
        app: [ frontend, backend ]
    needs: [ CreateVersion ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and Push Image
        uses: ./.github/actions/docker_build_push
        with:
          directory: ./${{ matrix.app }}
          image-name: ${{ matrix.app }}
          image-version: ${{ needs.CreateVersion.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
  SaveVersion:
    needs: [ Dockerize ]
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create version tag
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DRY_RUN: false
  Deploy:
    strategy:
      matrix:
        app: [ frontend, backend ]
    needs: [ SaveVersion ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to Kubernetes
        uses: ./.github/actions/kubernetes-set-image
        with:
          k8sconfig: ${{ secrets.K8S_CONFIG }}
          deployment: ${{ matrix.app }}
          version: ${{ needs.SaveVersion.outputs.new_tag }}
