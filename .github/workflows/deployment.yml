name: Fullstack CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    branches: [ "main" ]

concurrency:
  group: ${{ github.repository }}-deployment

jobs:
  CreateVersion:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create version tag
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DRY_RUN: true
  Dockerize:
    strategy:
      matrix:
        app: [ frontend, backend ]
    needs: [ CreateVersion ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.app }}
          platforms: linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ matrix.app }}:${{ needs.CreateVersion.outputs.new_tag }}
          cache-from: type=gha,scope=buildkit-${{ matrix.app }}
          cache-to: type=gha,mode=max,scope=buildkit-${{ matrix.app }}

  SaveVersion:
    needs: [ Dockerize ]
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create version tag
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DRY_RUN: false
  Deploy:
    needs: [ SaveVersion ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - name: Configure Kubectl
        env:
          K8S_CONFIG: ${{ secrets.K8S_CONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${K8S_CONFIG}" | base64 --decode > $HOME/.kube/config
        shell: bash

      - name: Install Helm
        run: helm upgrade -n prod -f ./.k8s/app/values-prod.yaml prod ./.k8s/app --set app.image.tag=${{ needs.SaveVersion.outputs.new_tag }}
        shell: bash